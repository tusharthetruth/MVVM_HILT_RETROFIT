// Generated by Dagger (https://dagger.dev).
package com.example.androidboilderplatecode.repository;

import com.example.androidboilderplatecode.network.RetrofitApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiRepository_Factory implements Factory<ApiRepository> {
  private final Provider<RetrofitApi> retrofitApiProvider;

  public ApiRepository_Factory(Provider<RetrofitApi> retrofitApiProvider) {
    this.retrofitApiProvider = retrofitApiProvider;
  }

  @Override
  public ApiRepository get() {
    return newInstance(retrofitApiProvider.get());
  }

  public static ApiRepository_Factory create(Provider<RetrofitApi> retrofitApiProvider) {
    return new ApiRepository_Factory(retrofitApiProvider);
  }

  public static ApiRepository newInstance(RetrofitApi retrofitApi) {
    return new ApiRepository(retrofitApi);
  }
}
